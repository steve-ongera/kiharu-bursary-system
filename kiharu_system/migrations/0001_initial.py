# Generated by Django 5.2 on 2025-05-04 08:49

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BursaryCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('category_type', models.CharField(choices=[('highschool', 'High School'), ('special_school', 'Special School'), ('college', 'College'), ('university', 'University')], max_length=20)),
                ('allocation_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('max_amount_per_applicant', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=500)),
                ('answer', models.TextField()),
                ('category', models.CharField(default='General', max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='FiscalYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('total_allocation', models.DecimalField(decimal_places=2, max_digits=12)),
                ('is_active', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('institution_type', models.CharField(choices=[('highschool', 'High School'), ('special_school', 'Special School'), ('college', 'College'), ('university', 'University')], max_length=20)),
                ('county', models.CharField(max_length=100)),
                ('postal_address', models.CharField(blank=True, max_length=100, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Ward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('applicant', 'Applicant'), ('admin', 'Administrator'), ('reviewer', 'Application Reviewer'), ('finance', 'Finance Officer')], default='applicant', max_length=20)),
                ('id_number', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('phone_number', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+254XXXXXXXXX'. Exactly 12 digits including country code.", regex='^\\+254\\d{9}$')])),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('published_date', models.DateTimeField()),
                ('expiry_date', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Applicant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('date_of_birth', models.DateField()),
                ('id_number', models.CharField(max_length=20, unique=True)),
                ('physical_address', models.TextField()),
                ('postal_address', models.CharField(blank=True, max_length=100, null=True)),
                ('special_needs', models.BooleanField(default=False)),
                ('special_needs_description', models.TextField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='applicant_profile', to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='kiharu_system.location')),
            ],
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_number', models.CharField(editable=False, max_length=20, unique=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('under_review', 'Under Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('disbursed', 'Disbursed')], default='draft', max_length=20)),
                ('admission_number', models.CharField(max_length=100)),
                ('year_of_study', models.PositiveIntegerField()),
                ('course_name', models.CharField(blank=True, max_length=200, null=True)),
                ('expected_completion_date', models.DateField()),
                ('total_fees_payable', models.DecimalField(decimal_places=2, max_digits=10)),
                ('fees_paid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('fees_balance', models.DecimalField(decimal_places=2, max_digits=10)),
                ('amount_requested', models.DecimalField(decimal_places=2, max_digits=10)),
                ('other_bursaries', models.BooleanField(default=False)),
                ('other_bursaries_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('other_bursaries_source', models.CharField(blank=True, max_length=200, null=True)),
                ('is_orphan', models.BooleanField(default=False)),
                ('is_disabled', models.BooleanField(default=False)),
                ('has_chronic_illness', models.BooleanField(default=False)),
                ('chronic_illness_description', models.TextField(blank=True, null=True)),
                ('date_submitted', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('previous_allocation', models.BooleanField(default=False)),
                ('previous_allocation_year', models.CharField(blank=True, max_length=20, null=True)),
                ('previous_allocation_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='kiharu_system.applicant')),
                ('bursary_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kiharu_system.bursarycategory')),
                ('fiscal_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kiharu_system.fiscalyear')),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kiharu_system.institution')),
            ],
        ),
        migrations.CreateModel(
            name='Allocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_allocated', models.DecimalField(decimal_places=2, max_digits=10)),
                ('allocation_date', models.DateField(auto_now_add=True)),
                ('cheque_number', models.CharField(blank=True, max_length=50, null=True)),
                ('is_disbursed', models.BooleanField(default=False)),
                ('disbursement_date', models.DateField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approvals', to=settings.AUTH_USER_MODEL)),
                ('disbursed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='disbursements', to=settings.AUTH_USER_MODEL)),
                ('application', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='allocation', to='kiharu_system.application')),
            ],
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('create', 'Create'), ('update', 'Update'), ('delete', 'Delete'), ('view', 'View'), ('approve', 'Approve'), ('reject', 'Reject'), ('disburse', 'Disburse'), ('login', 'Login'), ('logout', 'Logout')], max_length=20)),
                ('table_affected', models.CharField(max_length=100)),
                ('record_id', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField()),
                ('ip_address', models.GenericIPAddressField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_logs', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('id_card', 'National ID Card'), ('admission_letter', 'Admission Letter'), ('fee_structure', 'Fee Structure'), ('fee_statement', 'Fee Statement'), ('academic_results', 'Academic Results'), ('birth_certificate', 'Birth Certificate'), ('parent_id', 'Parent/Guardian ID'), ('death_certificate', 'Death Certificate'), ('medical_report', 'Medical Report'), ('recommendation_letter', 'Recommendation Letter'), ('other', 'Other Document')], max_length=30)),
                ('file', models.FileField(upload_to='bursary_documents/')),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='kiharu_system.application')),
            ],
        ),
        migrations.AddField(
            model_name='bursarycategory',
            name='fiscal_year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='kiharu_system.fiscalyear'),
        ),
        migrations.CreateModel(
            name='Guardian',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('relationship', models.CharField(choices=[('father', 'Father'), ('mother', 'Mother'), ('guardian', 'Guardian')], max_length=20)),
                ('phone_number', models.CharField(max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('occupation', models.CharField(blank=True, max_length=200, null=True)),
                ('monthly_income', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('id_number', models.CharField(blank=True, max_length=20, null=True)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='guardians', to='kiharu_system.applicant')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('application_status', 'Application Status'), ('document_request', 'Document Request'), ('allocation', 'Allocation'), ('disbursement', 'Disbursement'), ('system', 'System Notification')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('related_application', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='kiharu_system.application')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comments', models.TextField()),
                ('recommendation', models.CharField(choices=[('approve', 'Approve'), ('reject', 'Reject'), ('more_info', 'Request More Information')], max_length=50)),
                ('recommended_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('review_date', models.DateTimeField(auto_now_add=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='kiharu_system.application')),
                ('reviewer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviews', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SiblingInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('age', models.PositiveIntegerField()),
                ('education_level', models.CharField(max_length=100)),
                ('school_name', models.CharField(blank=True, max_length=200, null=True)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='siblings', to='kiharu_system.applicant')),
            ],
        ),
        migrations.CreateModel(
            name='SMSLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=20)),
                ('message', models.TextField()),
                ('status', models.CharField(default='pending', max_length=20)),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('delivery_status', models.CharField(blank=True, max_length=20, null=True)),
                ('recipient', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sms_messages', to=settings.AUTH_USER_MODEL)),
                ('related_application', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='kiharu_system.application')),
            ],
        ),
        migrations.CreateModel(
            name='SubLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sublocations', to='kiharu_system.location')),
            ],
        ),
        migrations.AddField(
            model_name='applicant',
            name='sublocation',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='kiharu_system.sublocation'),
        ),
        migrations.CreateModel(
            name='SystemSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('setting_name', models.CharField(max_length=100, unique=True)),
                ('setting_value', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Village',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('sublocation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='villages', to='kiharu_system.sublocation')),
            ],
        ),
        migrations.AddField(
            model_name='applicant',
            name='village',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='kiharu_system.village'),
        ),
        migrations.AddField(
            model_name='location',
            name='ward',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='kiharu_system.ward'),
        ),
        migrations.AddField(
            model_name='applicant',
            name='ward',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='residents', to='kiharu_system.ward'),
        ),
    ]
