# Generated by Django 5.2.4 on 2025-09-24 09:11

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('kiharu_system', '0003_alter_accountlock_last_attempt_ip'),
    ]

    operations = [
        migrations.CreateModel(
            name='AIAnalysisReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('allocation_prediction', 'Allocation Prediction'), ('demand_forecast', 'Demand Forecast'), ('budget_analysis', 'Budget Analysis'), ('performance_trend', 'Performance Trend Analysis'), ('geographic_analysis', 'Geographic Distribution Analysis'), ('institution_analysis', 'Institution-based Analysis')], max_length=30)),
                ('title', models.CharField(max_length=200)),
                ('analysis_data', models.JSONField()),
                ('predictions', models.JSONField(blank=True, null=True)),
                ('recommendations', models.JSONField(blank=True, null=True)),
                ('generated_date', models.DateTimeField(auto_now_add=True)),
                ('accuracy_score', models.DecimalField(blank=True, decimal_places=4, max_digits=5, null=True)),
                ('confidence_level', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('report_file', models.FileField(blank=True, null=True, upload_to='ai_reports/')),
                ('is_archived', models.BooleanField(default=False)),
                ('fiscal_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_reports', to='kiharu_system.fiscalyear')),
                ('generated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-generated_date'],
            },
        ),
        migrations.CreateModel(
            name='BulkCheque',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cheque_number', models.CharField(max_length=50, unique=True)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('student_count', models.PositiveIntegerField()),
                ('amount_per_student', models.DecimalField(decimal_places=2, max_digits=10)),
                ('cheque_holder_name', models.CharField(max_length=200)),
                ('cheque_holder_id', models.CharField(max_length=20)),
                ('cheque_holder_phone', models.CharField(max_length=20)),
                ('cheque_holder_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('cheque_holder_position', models.CharField(max_length=100)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('assigned_date', models.DateTimeField(blank=True, null=True)),
                ('is_collected', models.BooleanField(default=False)),
                ('collection_date', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('assigned_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_bulk_cheques', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_bulk_cheques', to=settings.AUTH_USER_MODEL)),
                ('fiscal_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kiharu_system.fiscalyear')),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bulk_cheques', to='kiharu_system.institution')),
            ],
            options={
                'ordering': ['-created_date'],
            },
        ),
        migrations.CreateModel(
            name='BulkChequeAllocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_notified', models.BooleanField(default=False)),
                ('notification_sent_date', models.DateTimeField(blank=True, null=True)),
                ('allocation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='bulk_cheque_allocation', to='kiharu_system.allocation')),
                ('bulk_cheque', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='allocations', to='kiharu_system.bulkcheque')),
            ],
        ),
        migrations.CreateModel(
            name='PredictionModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('model_type', models.CharField(choices=[('demand_forecasting', 'Demand Forecasting'), ('allocation_optimization', 'Allocation Optimization'), ('success_prediction', 'Academic Success Prediction'), ('geographic_clustering', 'Geographic Clustering')], max_length=30)),
                ('version', models.CharField(default='1.0', max_length=10)),
                ('model_parameters', models.JSONField()),
                ('feature_importance', models.JSONField(blank=True, null=True)),
                ('accuracy', models.DecimalField(blank=True, decimal_places=4, max_digits=5, null=True)),
                ('precision', models.DecimalField(blank=True, decimal_places=4, max_digits=5, null=True)),
                ('recall', models.DecimalField(blank=True, decimal_places=4, max_digits=5, null=True)),
                ('f1_score', models.DecimalField(blank=True, decimal_places=4, max_digits=5, null=True)),
                ('training_data_size', models.PositiveIntegerField(blank=True, null=True)),
                ('training_date', models.DateTimeField(auto_now_add=True)),
                ('last_retrained', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DataSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('snapshot_date', models.DateField()),
                ('total_applications', models.PositiveIntegerField()),
                ('approved_applications', models.PositiveIntegerField()),
                ('rejected_applications', models.PositiveIntegerField()),
                ('pending_applications', models.PositiveIntegerField()),
                ('total_requested', models.DecimalField(decimal_places=2, max_digits=12)),
                ('total_allocated', models.DecimalField(decimal_places=2, max_digits=12)),
                ('total_disbursed', models.DecimalField(decimal_places=2, max_digits=12)),
                ('gender_distribution', models.JSONField()),
                ('ward_distribution', models.JSONField()),
                ('institution_distribution', models.JSONField()),
                ('category_distribution', models.JSONField()),
                ('average_amount_requested', models.DecimalField(decimal_places=2, max_digits=10)),
                ('average_amount_allocated', models.DecimalField(decimal_places=2, max_digits=10)),
                ('approval_rate', models.DecimalField(decimal_places=2, max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('fiscal_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kiharu_system.fiscalyear')),
            ],
            options={
                'ordering': ['-snapshot_date'],
                'unique_together': {('snapshot_date', 'fiscal_year')},
            },
        ),
    ]
